name: Go

on:
  push:
    tags: "*"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Get tag name
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: Build
        run: go build -ldflags "-X main.release=${{ steps.vars.outputs.tag }} -v"

      - name: Make debian build directory
        run: mkdir -p {debian/DEBIAN/,debian/etc/libvirt-hostd/templates/,debian/usr/bin/,debian/lib/systemd/system/,debian/etc/default/}

      - name: Copy service file
        run: cp libvirt-hostd.service debian/lib/systemd/system/libvirt-hostd.service

      - name: Copy env defaults
        run: |
          echo "# Default settings for libvirt-hostd

          # Options to pass to libvirt-hostd
          LIBVIRT_HOSTD_OPTS="-l :2222"
          " > debian/etc/default/libvirt-hostd

      - name: Copy binary
        run: cp libvirt-hostd debian/usr/bin/

      - name: Create debian control file
        run: |
          echo "Package: libvirt-hostd
          Version: ${{ steps.vars.outputs.tag }}
          Section: utils
          Priority: optional
          Architecture: amd64
          Maintainer: Nate Sales <nate@natesales.net>
          Description: HTTP RPC API for libvirt " > debian/DEBIAN/control

      - name: Create debian copyright file
        run: echo "Copyright 2020 Nathan Sales." > debian/DEBIAN/copyright

      - name: Build debian package
        run: |
          dpkg-deb --build debian
          mv debian.deb libvirt-hostd-${{ steps.vars.outputs.tag }}.deb

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload debian package
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: libvirt-hostd-${{ steps.vars.outputs.tag }}.deb
          asset_name: libvirt-hostd-${{ steps.vars.outputs.tag }}.deb
          asset_content_type: application/x-deb

      - name: Upload binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./libvirt-hostd
          asset_name: libvirt-hostd-${{ steps.vars.outputs.tag }}-amd64
          asset_content_type: application/x-deb

      - name: Update debian repo
        run: curl -F package=@libvirt-hostd-${{ steps.vars.outputs.tag }}.deb https://${{ secrets.TOKEN }}@push.fury.io/natesales/
